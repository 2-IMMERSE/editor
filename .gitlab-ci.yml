# Define stage - these run in order specified below
stages:
  - build
  - test
  - deploy

# Builds the latest code then auto-deploy
edge:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - 2immerse
    - docker
  only:
    - develop

# Builds tagged releases
tag:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - 2immerse
    - docker
  only:
    - tags

# Builds branches to allow testing MRs
branches:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - 2immerse
    - docker
  only:
    - branches
  except:
    - develop
    - master

test_edge:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker run --rm $CI_REGISTRY_IMAGE:latest /bin/sh -c 'cd test; python -m unittest discover'
    - docker run --rm $CI_REGISTRY_IMAGE:latest /bin/sh -c 'cd app/static; jest --bail'
  tags:
    - 2immerse
    - docker
  only:
    - develop

# Deploys the latest docker image to edge and notifies GitLab
deploy_edge:
  stage: deploy
  image: alpine:3.5
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache curl ca-certificates
  script:
    - "curl -sku \"${MARATHON_USER}:${MARATHON_PASS}\" -H 'Content-Type: application/json' -XPOST https://platform.2immerse.eu/marathon/v2/apps/%2F${CI_ENVIRONMENT_SLUG}%2F${CI_PROJECT_NAME}/restart"
  environment:
    name: edge
    url: https://platform.2immerse.eu/marathon/v2/apps/%2F${CI_ENVIRONMENT_SLUG}%2F${CI_PROJECT_NAME}
  tags:
    - 2immerse
    - docker
  only:
    - develop
