# Define stage - these run in order specified below
stages:
  - build
  - test
  - deploy

# Builds the latest code then auto-deploy
edge:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - 2immerse
    - docker
  only:
    - develop

# Builds tagged releases
tag:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - 2immerse
    - docker
  only:
    - tags

branches:
  stage: build
  image: docker:latest
  script:
    - echo "${CI_COMMIT_REF_NAME}/${CI_COMMIT_SHA}" > ./REVISION
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - 2immerse
    - docker
  only:
    - branches
  except:
    - develop
    - master

test_edge:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker run --rm $CI_REGISTRY_IMAGE:latest /bin/sh -c 'cd test && python -m unittest discover'
    - docker run --rm $CI_REGISTRY_IMAGE:latest /bin/sh -c 'cd app/static && apk add --no-cache git yarn && yarn install && yarn run jest --bail --coverage'
  tags:
    - 2immerse
    - docker
  only:
    - develop

test_tag:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd test && python -m unittest discover'
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd app/static && apk add --no-cache git yarn && yarn install && yarn run jest --bail --coverage'
  tags:
    - 2immerse
    - docker
  only:
    - tags

test_branch:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd test && python -m unittest discover'
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd app/static && apk add --no-cache git yarn && yarn install && yarn run jest --bail --coverage'
  tags:
    - 2immerse
    - docker
  only:
    - branches
  except:
    - develop
    - master
    - exp-py3

test_py3:
  stage: test
  image: docker:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd test && KIBANA_SERVICE_URL="" LOGLEVEL="WARN" python -m unittest discover'
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'cd app/static && apk add --no-cache git yarn && yarn install && yarn run jest --bail --coverage'
    - docker run --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME /bin/sh -c 'apk add --no-cache python3 py3-pip && pip3 install -r requirements.txt && cd test && KIBANA_SERVICE_URL="" LOGLEVEL="WARN" python3 -m unittest discover'
  tags:
    - 2immerse
    - docker
  only:
    - exp-py3

# Deploys the latest docker image to edge and notifies GitLab
deploy_edge:
  stage: deploy
  image: alpine:3.5
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache curl ca-certificates
  script:
    - "curl -s -H 'Content-Type: application/json' -XPOST -d '{\"push_data\":{\"tag\":\"latest\"},\"repository\":{\"repo_name\":\"'$CI_REGISTRY_IMAGE'\"}}' ${RANCHER_WEBHOOK}"
  environment:
    name: edge
    url: https://rancher.platform.2immerse.eu/env/1a856/apps/stacks/1st430/services/1s1988/containers
  tags:
    - 2immerse
    - docker
  only:
    - develop
